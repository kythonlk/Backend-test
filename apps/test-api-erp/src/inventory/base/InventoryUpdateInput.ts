/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsDate,
  IsOptional,
  IsString,
  MaxLength,
  ValidateNested,
  IsNumber,
  Min,
  Max,
  IsInt,
} from "class-validator";

import { Type } from "class-transformer";
import { FinancialUpdateManyWithoutInventoriesInput } from "./FinancialUpdateManyWithoutInventoriesInput";
import { PurchasingUpdateManyWithoutInventoriesInput } from "./PurchasingUpdateManyWithoutInventoriesInput";
import { SalesUpdateManyWithoutInventoriesInput } from "./SalesUpdateManyWithoutInventoriesInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class InventoryUpdateInput {
  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  addedDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => FinancialUpdateManyWithoutInventoriesInput,
  })
  @ValidateNested()
  @Type(() => FinancialUpdateManyWithoutInventoriesInput)
  @IsOptional()
  @Field(() => FinancialUpdateManyWithoutInventoriesInput, {
    nullable: true,
  })
  financials?: FinancialUpdateManyWithoutInventoriesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  itemName?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  price?: number | null;

  @ApiProperty({
    required: false,
    type: () => PurchasingUpdateManyWithoutInventoriesInput,
  })
  @ValidateNested()
  @Type(() => PurchasingUpdateManyWithoutInventoriesInput)
  @IsOptional()
  @Field(() => PurchasingUpdateManyWithoutInventoriesInput, {
    nullable: true,
  })
  purchasings?: PurchasingUpdateManyWithoutInventoriesInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  quantity?: number | null;

  @ApiProperty({
    required: false,
    type: () => SalesUpdateManyWithoutInventoriesInput,
  })
  @ValidateNested()
  @Type(() => SalesUpdateManyWithoutInventoriesInput)
  @IsOptional()
  @Field(() => SalesUpdateManyWithoutInventoriesInput, {
    nullable: true,
  })
  salesItems?: SalesUpdateManyWithoutInventoriesInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedDate?: Date | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}

export { InventoryUpdateInput as InventoryUpdateInput };
