/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { FinancialListRelationFilter } from "../../financial/base/FinancialListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { InventoryListRelationFilter } from "../../inventory/base/InventoryListRelationFilter";
import { PurchasingListRelationFilter } from "../../purchasing/base/PurchasingListRelationFilter";
import { SalesListRelationFilter } from "../../sales/base/SalesListRelationFilter";

@InputType()
class UserWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => FinancialListRelationFilter,
  })
  @ValidateNested()
  @Type(() => FinancialListRelationFilter)
  @IsOptional()
  @Field(() => FinancialListRelationFilter, {
    nullable: true,
  })
  financials?: FinancialListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => InventoryListRelationFilter,
  })
  @ValidateNested()
  @Type(() => InventoryListRelationFilter)
  @IsOptional()
  @Field(() => InventoryListRelationFilter, {
    nullable: true,
  })
  inventories?: InventoryListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => PurchasingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PurchasingListRelationFilter)
  @IsOptional()
  @Field(() => PurchasingListRelationFilter, {
    nullable: true,
  })
  purchasings?: PurchasingListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SalesListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SalesListRelationFilter)
  @IsOptional()
  @Field(() => SalesListRelationFilter, {
    nullable: true,
  })
  salesItems?: SalesListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  username?: StringFilter;
}

export { UserWhereInput as UserWhereInput };
